---

services:
  verba:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    environment:
      - OPENAI_BASE_URL=$OPENAI_BASE_URL
      - OPENAI_MODEL=$OPENAI_MODEL
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - OPENAI_EMBED_BASE_URL=$OPENAI_EMBED_BASE_URL
      - OPENAI_EMBED_MODEL=$OPENAI_EMBED_MODEL
      - OPENAI_EMBED_API_KEY=$OPENAI_EMBED_API_KEY
      - OPENAI_CUSTOM_EMBED=$OPENAI_CUSTOM_EMBED
      - DEFAULT_DEPLOYMENT=$DEFAULT_DEPLOYMENT
      - SYSYEM_MESSAGE_PROMPT=$SYSYEM_MESSAGE_PROMPT
      - XDG_DATA_HOME=/persistent_weaviate
    volumes:
      - weaviate_data:/persistent_weaviate
    # depends_on:
    #   weaviate:
    #     condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    # networks:
    #   - ollama-docker

    # TODO: for now we deploy in local mode, meaning we use embedded weaviate https://weaviate.io/developers/weaviate/installation/embedded
    # weaviate:
    #   command:
    #     - --host
    #     - 0.0.0.0
    #     - --port
    #     - '8080'
    #     - --scheme
    #     - http
    #   image: semitechnologies/weaviate:1.25.10
    #   ports:
    #     - 8080:8080
    #     - 3000:8080
    #   volumes:
    #     - weaviate_data:/var/lib/weaviate
    #   restart: on-failure:0
    #   healthcheck:
    #     test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
    #     interval: 5s
    #     timeout: 10s
    #     retries: 5
    #     start_period: 10s
    #   environment:
    #     OPENAI_APIKEY: $OPENAI_API_KEY
    #     COHERE_APIKEY: $COHERE_API_KEY
    #     QUERY_DEFAULTS_LIMIT: 25
    #     AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
    #     PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
    #     ENABLE_MODULES: 'e'
    #     CLUSTER_HOSTNAME: 'node1'
    #   networks:
    #     - ollama-docker

volumes:
  weaviate_data: {}

# networks:
#   ollama-docker:
#     external: false
